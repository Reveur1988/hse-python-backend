name: shop-monitoring

services:
  api:
    image: shop-api-local:latest
    build:
      context: ../..
      dockerfile: lecture_3/hw/Dockerfile
      target: local
    ports:
      - "8000:8000"
    restart: always
    networks:
      - monitoring-network
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/metrics')"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    ports:
      - "9090:9090"
    restart: always
    networks:
      - monitoring-network
    depends_on:
      - api

  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
    restart: always
    networks:
      - monitoring-network
    depends_on:
      - prometheus

networks:
  monitoring-network:
    driver: bridge

volumes:
  grafana-storage:
